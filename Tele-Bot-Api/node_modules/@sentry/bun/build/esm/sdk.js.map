{"version":3,"file":"sdk.js","sources":["../../src/sdk.ts"],"sourcesContent":["import {\n  functionToStringIntegration,\n  inboundFiltersIntegration,\n  linkedErrorsIntegration,\n  requestDataIntegration,\n} from '@sentry/core';\nimport type { NodeClient } from '@sentry/node';\nimport {\n  consoleIntegration,\n  contextLinesIntegration,\n  httpIntegration,\n  init as initNode,\n  modulesIntegration,\n  nativeNodeFetchIntegration,\n  nodeContextIntegration,\n  onUncaughtExceptionIntegration,\n  onUnhandledRejectionIntegration,\n} from '@sentry/node';\nimport type { Integration, Options } from '@sentry/types';\n\nimport { BunClient } from './client';\nimport { bunServerIntegration } from './integrations/bunserver';\nimport { makeFetchTransport } from './transports';\nimport type { BunOptions } from './types';\n\n/** Get the default integrations for the Bun SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // Common\n    inboundFiltersIntegration(),\n    functionToStringIntegration(),\n    linkedErrorsIntegration(),\n    requestDataIntegration(),\n    // Native Wrappers\n    consoleIntegration(),\n    httpIntegration(),\n    nativeNodeFetchIntegration(),\n    // Global Handlers\n    onUncaughtExceptionIntegration(),\n    onUnhandledRejectionIntegration(),\n    // Event Info\n    contextLinesIntegration(),\n    nodeContextIntegration(),\n    modulesIntegration(),\n    // Bun Specific\n    bunServerIntegration(),\n  ];\n}\n\n/**\n * The Sentry Bun SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible in the\n * main entry module. To set context information or send manual events, use the\n * provided methods.\n *\n * @example\n * ```\n *\n * const { init } = require('@sentry/bun');\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const { addBreadcrumb } = require('@sentry/node');\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * const Sentry = require('@sentry/node');\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BunOptions} for documentation on configuration options.\n */\nexport function init(options: BunOptions = {}): NodeClient | undefined {\n  options.clientClass = BunClient;\n  options.transport = options.transport || makeFetchTransport;\n\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n\n  return initNode(options);\n}\n"],"names":["initNode"],"mappings":";;;;;;AAyBA;AACO,SAAS,sBAAsB,CAAC,QAAQ,EAA0B;AACzE;AACA,EAAE,OAAO;AACT;AACA,IAAI,yBAAyB,EAAE;AAC/B,IAAI,2BAA2B,EAAE;AACjC,IAAI,uBAAuB,EAAE;AAC7B,IAAI,sBAAsB,EAAE;AAC5B;AACA,IAAI,kBAAkB,EAAE;AACxB,IAAI,eAAe,EAAE;AACrB,IAAI,0BAA0B,EAAE;AAChC;AACA,IAAI,8BAA8B,EAAE;AACpC,IAAI,+BAA+B,EAAE;AACrC;AACA,IAAI,uBAAuB,EAAE;AAC7B,IAAI,sBAAsB,EAAE;AAC5B,IAAI,kBAAkB,EAAE;AACxB;AACA,IAAI,oBAAoB,EAAE;AAC1B,GAAG,CAAA;AACH,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,IAAI,CAAC,OAAO,GAAe,EAAE,EAA0B;AACvE,EAAE,OAAO,CAAC,WAAY,GAAE,SAAS,CAAA;AACjC,EAAE,OAAO,CAAC,SAAU,GAAE,OAAO,CAAC,SAAA,IAAa,kBAAkB,CAAA;AAC7D;AACA,EAAE,IAAI,OAAO,CAAC,mBAAoB,KAAI,SAAS,EAAE;AACjD,IAAI,OAAO,CAAC,mBAAA,GAAsB,sBAAsB,CAAQ,CAAC,CAAA;AACjE,GAAE;AACF;AACA,EAAE,OAAOA,MAAQ,CAAC,OAAO,CAAC,CAAA;AAC1B;;;;"}